name: Deploy to EC2

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Deploy Docker image to EC2 via SSM
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          # Construct a valid Docker image reference
          IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY:latest"
          echo "Deploying image: $IMAGE"

          aws ssm send-command \
            --instance-ids "$EC2_INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Manual deploy from GitHub Actions" \
            --parameters commands="[
              \"aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY\",
              \"docker pull $IMAGE\",
              \"docker stop rock-of-ages-api-docker || true\",
              \"docker rm rock-of-ages-api-docker || true\",
              \"docker run --pull always -d --name rock-of-ages-api-docker -p 80:8000 $IMAGE\"
            ]"
