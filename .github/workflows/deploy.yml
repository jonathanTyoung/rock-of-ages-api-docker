name: CI/CD: Build & Deploy to EC2

on:
  workflow_dispatch:  # manual trigger only

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Configure AWS credentials via OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3️⃣ Login to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # 4️⃣ Build and push Docker image
      - name: Build and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest   # or use $(date +%s) for unique timestamps
        run: |
          # Strip any whitespace/newlines from secrets
          ECR_REGISTRY=$(echo "$ECR_REGISTRY" | tr -d '[:space:]')
          ECR_REPOSITORY=$(echo "$ECR_REPOSITORY" | tr -d '[:space:]')

          IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "Building Docker image: $IMAGE"

          docker build . --file Dockerfile --tag "$IMAGE"
          docker push "$IMAGE"

      # 5️⃣ Deploy the image to EC2 via SSM
      - name: Deploy Docker image to EC2 via SSM
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "Deploying Docker image: $IMAGE to EC2 instance: $EC2_INSTANCE_ID"

          aws ssm send-command \
            --instance-ids "$EC2_INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy from GitHub Actions" \
            --parameters commands="[
              \"aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY\",
              \"docker pull $IMAGE\",
              \"docker stop rock-of-ages-api-docker || true\",
              \"docker rm rock-of-ages-api-docker || true\",
              \"docker run --pull always -d --name rock-of-ages-api-docker -p 80:8000 $IMAGE\"
            ]" \
            --region "$AWS_REGION"
