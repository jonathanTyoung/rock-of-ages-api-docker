name: Build & Push Docker Image

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install --dev

      - name: Run tests
        run: pipenv run python manage.py test


  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test  # ðŸ‘ˆ ensures tests pass before build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push Docker image
        run: |
          # Remove any accidental newlines or spaces in secrets
          ECR_REGISTRY=$(echo "${{ secrets.ECR_REGISTRY }}" | tr -d '\n' | tr -d '\r' | xargs)
          ECR_REPOSITORY=$(echo "${{ secrets.ECR_REPOSITORY }}" | tr -d '\n' | tr -d '\r' | xargs)

          IMAGE="${ECR_REGISTRY}/${ECR_REPOSITORY}:latest"
          echo "Building image: $IMAGE"

          docker build -t "$IMAGE" .
          docker push "$IMAGE"
